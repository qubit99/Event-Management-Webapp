{"version":3,"sources":["components/LoginModal.js","components/LandingPage.js","components/DashBoard/SideBar.js","components/DashBoard/RegnContent.js","components/DashBoard/RegnDetails.js","components/DashBoard/Stats.js","components/Registration/previewForm.js","components/Registration/FormComponent.js","components/Registration/RegisterPage.js","components/mainComponent.js","App.js","serviceWorker.js","index.js"],"names":["LoginModal","props","buttonLabel","className","useForm","register","handleSubmit","useState","modal","setModal","toggle","closeBtn","onClick","Button","size","color","Modal","isOpen","ModalHeader","close","Form","onSubmit","data","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","window","sessionStorage","setItem","access_token","location","href","catch","error","ModalBody","FormGroup","row","Label","for","sm","Col","type","name","id","placeholder","defaultValue","ref","required","maxLength","ModalFooter","value","LandingPage","to","style","textDecoration","SideBar","Nav","vertical","NavItem","NavLink","tag","Link","outline","event","removeItem","RegnContent","state","page","this","Authorization","getItem","setState","prevProps","prevState","key","Table","width","map","obj","scope","pathname","date","Pagination","aria-label","PaginationItem","PaginationLink","previous","next","Component","withRouter","RegnDetails","delete","history","Card","CardImg","top","height","src","id_card","alt","CardBody","CardTitle","CardText","email","mob_no","regn_type","num_guests","Stats","chartType","loader","options","title","rootProps","PreviewForm","submit","preventDefault","captcha","alert","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","variant","onHide","FormComponent","context","getbase64","dataUrl","res","idcard","toDataURL","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","result","readAsDataURL","open","responseType","send","inputChanged","target","handleUpload","output","document","getElementById","URL","createObjectURL","files","revokeObjectURL","handleregn","regn","disabled","min","modalShow","bind","verifyCallback","onLoadRecaptcha","captchaDemo","reset","onChange","custom","e","el","sitekey","onloadCallback","show","RegisterPage","mainComponent","exact","path","component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9b28bf60.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\n\r\nconst LoginModal = (props) => {\r\n    const {\r\n        buttonLabel,\r\n        className,\r\n    } = props;\r\n    \r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n      console.log(data);\r\n      fetch(\"https://stackhack-api.herokuapp.com/auth\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Successfully logged in\");\r\n          window.sessionStorage.setItem(\"key\", data.access_token);\r\n          window.location.href = \"/Event-Management-Webapp/#/admin\";\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    } \r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const closeBtn = <button className=\"close\" onClick={toggle}>&times;</button>;\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Button size=\"lg\" color=\"outline-warning\" onClick={toggle}>\r\n          {buttonLabel}Admin Login\r\n        </Button>\r\n        <Modal isOpen={modal} toggle={toggle} className={className}>\r\n          <ModalHeader toggle={toggle} close={closeBtn}>\r\n            Admin Login\r\n          </ModalHeader>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <ModalBody>\r\n              <FormGroup row>\r\n                <Label for=\"exampleEmail\" sm={2}>\r\n                  Email\r\n                </Label>\r\n                <Col sm={10}>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    name=\"username\"\r\n                    id=\"Email\"\r\n                    placeholder=\"username@example.com\"\r\n                    defaultValue=\"\"\r\n                    ref={register({ required: true, maxLength: 30 })}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"examplePassword\" sm={2}>\r\n                  Password\r\n                </Label>\r\n                <Col sm={10}>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"Password\"\r\n                    placeholder=\"password\"\r\n                    ref={register({ required: true, maxLength: 30 })}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <input\r\n                className=\"btn btn-success\"\r\n                type=\"submit\"\r\n                name=\"login\"\r\n                value=\"Login\"\r\n              />\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LoginModal;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport '../css/landingpage.css'\r\nimport LoginModal from './LoginModal';\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n      <div className=\"lp\">\r\n        <div className=\"row justify-content-end mr-4 pt-2\">\r\n          <LoginModal />\r\n        </div>\r\n        <header id=\"showcase\">\r\n          <div className=\"container showcase-content\">\r\n            <h1>StackHack 1.0</h1>\r\n            <br />\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Molestiae, quasi quam tenetur exercitationem sint suscipit ipsum\r\n              in pariatur officiis mollitia!\r\n            </p>\r\n            <Link\r\n              to=\"/register\"\r\n              className=\"bttn\"\r\n              style={{ textDecoration: \"none\", color: \"inherit\" }}>\r\n              Register Now!\r\n            </Link>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage\r\n","import React from \"react\";\r\nimport { NavItem, NavLink, Nav, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst SideBar = () => (\r\n  <div className=\"col-6 col-md-3\">\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-header\">\r\n        <h3>Admin Dashboard</h3>\r\n      </div>\r\n      <div className=\"side-menu\">\r\n        <Nav vertical className=\"list-unstyled pb-3\">\r\n          <NavItem className=\"navitem\">\r\n            <NavLink className=\"navlink\" tag={Link} to={\"/admin\"}>\r\n              Dashboard\r\n            </NavLink>\r\n            <NavLink className=\"navlink\" tag={Link} to={\"/admin/stats\"}>\r\n              Stats\r\n            </NavLink>\r\n          </NavItem>\r\n          <center className = \"mt-2 p-2\">\r\n            <Button outline color = \"danger\" onClick = {(event) =>{\r\n                window.sessionStorage.removeItem(\"key\");\r\n                window.location.href = \"/Event-Management-Webapp/#/\";\r\n            }}>Logout</Button>\r\n          </center>\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport SideBar from \"./SideBar\";\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport { Table, Pagination, PaginationItem, PaginationLink} from \"reactstrap\";\r\n\r\nimport \"../../css/sidebar.css\"\r\n\r\nclass RegnContent extends Component {\r\n    \r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            data : [],\r\n            page : 1\r\n        }\r\n            \r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        fetch(`https://stackhack-api.herokuapp.com/all/${this.state.page}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `JWT ${window.sessionStorage.getItem(\"key\")}`,\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            // console.log(\"Success:\", data);\r\n            this.setState({ data, data });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n          });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(this.state.page!==prevState.page){\r\n            let key = window.sessionStorage.getItem(\"key\");\r\n            console.log(key);\r\n            fetch(\r\n              `https://stackhack-api.herokuapp.com/all/${this.state.page}`,\r\n              {\r\n                method: \"GET\",\r\n                headers: {\r\n                  Authorization: `JWT ${window.sessionStorage.getItem(\"key\")}`,\r\n                },\r\n              }\r\n            )\r\n              .then((response) => response.json())\r\n              .then((data) => {\r\n                // console.log(\"Success:\", data);\r\n                this.setState({ data, data });\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n              });\r\n        }\r\n    }\r\n    \r\n    \r\n    render() {\r\n        const data = this.state.data;\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"row justify-items-start\">\r\n                    <div className=\"col-3\">\r\n                        <SideBar />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className = \"mt-3 pt-3\">\r\n                            <h2 className=\"p-2\">Registration Details</h2>\r\n                            <Table style={{ width: \"75%\" }} className=\"mt-3\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Name</th>\r\n                                        <th>Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {data.map((obj) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <th scope=\"row\" ><Link to={{\r\n                                                    pathname: `/admin/regn/${obj.id}`,\r\n                                                    state: { id: `${obj.id}` }\r\n                                                }}>{obj.id}</Link></th>\r\n                                                <td>{obj.name}</td>\r\n                                                <td> {obj.date}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row-reverse\">\r\n                            <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                <PaginationItem>\r\n                                    <PaginationLink previous onClick={(event) => { this.setState({ page: this.state.page - 1 }) }} />\r\n                                </PaginationItem>\r\n                                <PaginationItem>\r\n                                    <PaginationLink next onClick={(event) => { this.setState({ page: this.state.page + 1 }) }} />\r\n                                </PaginationItem>\r\n                            </Pagination>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(RegnContent);\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Button\r\n} from 'reactstrap';\r\nimport SideBar from \"./SideBar\"\r\nclass RegnDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.history.location.state.id,\r\n            data : {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let key = window.sessionStorage.getItem(\"key\");\r\n        console.log(key);\r\n        fetch(`https://stackhack-api.herokuapp.com/details/${this.state.id}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `JWT ${window.sessionStorage.getItem(\"key\")}`,\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            // console.log(\"Success:\", data);\r\n            this.setState({ data, data });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n          });\r\n    }\r\n\r\n    delete = (event) => {\r\n        fetch(`https://stackhack-api.herokuapp.com/details/${this.state.id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: `JWT ${window.sessionStorage.getItem(\"key\")}`,\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            window.location.href = \"/Event-Management-Webapp/#/admin\";\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n          });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-items-start\">\r\n                <div className=\"col-3\">\r\n                    <SideBar />\r\n                </div>\r\n                <div className = \"col-6 pt-3 mt-3\">\r\n                    <div>\r\n                        <Card className = \"mt-4\">\r\n                            <CardImg top width=\"100%\" height = \"400px\"src={this.state.data.id_card}  alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle>{this.state.data.name}'s Registration Details</CardTitle>\r\n                                <CardText>\r\n                                    Email : {this.state.data.email} <br />\r\n                                    Phone : {this.state.data.mob_no} <br />\r\n                                    Registration Type : {this.state.data.regn_type} <br />\r\n                                    Number of Tickets : {this.state.data.num_guests}     \r\n                                </CardText>\r\n                                <Button color = \"danger\" onClick = {this.delete}>Delete</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegnDetails;","import React, { Component } from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\nimport SideBar from \"./SideBar\";\r\n\r\nexport default class Stats extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [[]]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`https://stackhack-api.herokuapp.com/stats`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `JWT ${window.sessionStorage.getItem(\"key\")}`,\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(\"Success:\", data);\r\n            this.setState({ data, data });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n          });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-items-start\">\r\n                <div className=\"col-3\">\r\n                    <SideBar />\r\n                </div>\r\n                <div className=\"col-6 pt-3 mt-3\">\r\n                    <Chart\r\n                        width={'1000px'}\r\n                        height={'600px'}\r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={[\r\n                            ['Registration type', 'No of registrations'],\r\n                            ...this.state.data\r\n                        ]}\r\n                        options={{\r\n                            title: 'Registration type Pie Chart',\r\n                        }}\r\n                        rootProps={{ 'data-testid': '1' }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal,Button } from \"react-bootstrap\";\r\n\r\nexport default class PreviewForm extends Component{\r\n    submit = (event) => {\r\n        event.preventDefault();\r\n        if (this.props.response.name === \"\" || this.props.response.mob_no === \"\" || this.props.response.email === \"\"||!this.props.captcha) {\r\n            console.log(this.props.captcha)\r\n            alert('You have not filled the form correctly')\r\n        }\r\n        else{\r\n            console.log(this.props.response);\r\n            fetch(\"https://stackhack-api.herokuapp.com/\", {\r\n              method: \"POST\", // or 'PUT'\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(this.props.response),\r\n            })\r\n              .then((response) => response.json())\r\n              .then((data) => {\r\n                // console.log(\"Success:\", data);\r\n                alert(\r\n                  `Registration successful. Your registration id is ${data.id}`\r\n                );\r\n                window.location.href = \"/Event-Management-Webapp/#/\";\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n              });\r\n        }      \r\n        \r\n    };\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Preview Form before submitting\r\n        </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Form Details</h4>\r\n                    <p>\r\n                        Full Name : {this.props.response.name} <br />\r\n                        Mobile no : {this.props.response.mob_no} <br />\r\n                        Email id : {this.props.response.email} <br />\r\n                        Registration Type : {this.props.response.regn_type} <br/>\r\n                        Number of guests : {this.props.response.num_guests}\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                        <input\r\n                            id = \"submit\"\r\n                            type=\"submit\"\r\n                            value=\"Submit\"\r\n                            className=\"btn btn-success\"\r\n                            onClick={this.submit}\r\n                        />\r\n\r\n                    <Button variant = \"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n    }\r\n    ","import React, { Component} from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/registerpage.css\";\r\nimport { Form, FormGroup, Button } from \"react-bootstrap\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport PreviewForm from \"./previewForm\";\r\n\r\nclass FormComponent extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      response: {\r\n        name: \"\",\r\n        mob_no: \"\",\r\n        email: \"\",\r\n        idcard: \"\",\r\n        regn_type: \"Self\",\r\n        num_guests: \"1\"\r\n      },\r\n      modalShow : false,\r\n      captcha : false,\r\n    };\r\n    this.inputChanged = this.inputChanged.bind(this);\r\n    this.handleUpload = this.handleUpload.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\r\n  }\r\n  \r\n  getbase64 = (dataUrl) => {\r\n    const res = this.state.response;\r\n    res.idcard = dataUrl;\r\n    this.setState({ response: res });\r\n  }\r\n\r\n  toDataURL = (url, callback) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.onload = function () {\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n          callback(reader.result);\r\n        }\r\n        reader.readAsDataURL(xhr.response);\r\n      };\r\n      xhr.open('GET', url);\r\n      xhr.responseType = 'blob';\r\n      xhr.send();\r\n    }\r\n\r\n  inputChanged = (event) => {\r\n    const res = this.state.response;\r\n    res[event.target.name] = event.target.value;\r\n    this.setState({ response: res });\r\n  };\r\n\r\n  handleUpload = (event) => {\r\n    var output = document.getElementById('output');\r\n    output.src = URL.createObjectURL(event.target.files[0]);\r\n\r\n    this.toDataURL(output.src, this.getbase64);\r\n    \r\n    output.height = 200;\r\n    output.width = 400;\r\n    output.onload = function () {\r\n      URL.revokeObjectURL(output.src)\r\n    }\r\n  };\r\n\r\n  handleregn = (event) =>{\r\n    var regn = document.getElementById('num_guests');\r\n    if(this.state.response.regn_type!==\"Self\"){\r\n      regn.disabled = false;\r\n      let res = this.state.response;\r\n      res.num_guests = 2;\r\n      this.setState({response : res});\r\n      regn.min = 2;\r\n    }\r\n    else{\r\n      let res = this.state.response;\r\n      res.num_guests = 1;\r\n      this.setState({ response: res });\r\n      regn.disabled = true;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.captchaDemo) {\r\n      console.log(\"started, just a second..\")\r\n      this.captchaDemo.reset();\r\n    }\r\n  }\r\n\r\n  onLoadRecaptcha() {\r\n    if (this.captchaDemo) {\r\n      this.captchaDemo.reset();\r\n    }\r\n  }\r\n\r\n  verifyCallback(response) {\r\n    this.setState({ captcha: true});\r\n    console.log(this.state.captcha);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"jumbotron jumbotron-billboard mt-1\">\r\n          <div className=\"img\"></div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <h2 className=\"display-3\">Stack Hack 1.0</h2>\r\n                <p className=\"lead\">Register for our upcoming event</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <legend className=\"ml-4\">Event Registration</legend>\r\n        <Form className=\"m-4 p-3\">\r\n          <div className=\"row justify-content-around\">\r\n            <div className=\"col-12 col-md-6 order-last\">\r\n              <img id=\"output\" className=\"row ml-3 p-2\" alt=\"\" />\r\n              <FormGroup className=\"row\">\r\n                <div className=\"col-8 col-md-2 mt-2 idcard\">ID Card</div>\r\n                <Form.Label className=\"col-10 col-md-5\">\r\n                  <div className=\"input-group mb-3\">\r\n                    <div className=\"custom-file\">\r\n                      <input\r\n                        className=\"custom-file-input\"\r\n                        type=\"file\"\r\n                        id=\"custom-file\"\r\n                        name=\"idcard\"\r\n                        onChange={this.handleUpload}\r\n                        custom=\"true\"\r\n                      />\r\n                      <label className=\"custom-file-label\">Choose file</label>\r\n                    </div>\r\n                  </div>\r\n                </Form.Label>\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 order-first\">\r\n              <FormGroup className=\"row\">\r\n                <div className=\"col-8 col-md-2\">Full Name</div>\r\n                <Form.Label className=\"col-10 col-md-7\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.response.name}\r\n                    onChange={this.inputChanged}\r\n                  />\r\n                </Form.Label>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <div className=\"col-8 col-md-2\"> mob_no Number</div>\r\n                <Form.Label className=\"col-10 col-md-7\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"mob_no\"\r\n                    value={this.state.response.mob_no}\r\n                    onChange={this.inputChanged}\r\n                  />\r\n                </Form.Label>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <div className=\"col-8 col-md-2\">Email</div>\r\n                <Form.Label className=\"col-10 col-md-7\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={this.state.response.email}\r\n                    onChange={this.inputChanged}\r\n                  />\r\n                </Form.Label>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <div className=\"col-8 col-md-2\">Registration type</div>\r\n                <Form.Label className=\"col-10 col-md-7\">\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"regn_type\"\r\n                    name=\"regn_type\"\r\n                    value={this.state.response.regn_type}\r\n                    onChange={(e) => {\r\n                      this.inputChanged(e);\r\n                      this.handleregn(e);\r\n                    }}>\r\n                    <option>Self</option>\r\n                    <option>Group</option>\r\n                    <option>Corporate</option>\r\n                    <option>Others</option>\r\n                  </select>\r\n                </Form.Label>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <div className=\"col-8 col-md-2\">Number of tickets</div>\r\n                <Form.Label className=\"col-10 col-md-7\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    id=\"num_guests\"\r\n                    disabled={true}\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    name=\"num_guests\"\r\n                    value={this.state.response.num_guests}\r\n                    onChange={this.inputChanged}\r\n                  />\r\n                </Form.Label>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <ReCAPTCHA\r\n                  ref={(el) => { this.captchaDemo = el; }}\r\n                  sitekey=\"6Lf10P0UAAAAAEAIMcsxIWVn1Yvmy5EIpSxMxuZr\"\r\n                  onloadCallback={this.onLoadRecaptcha}\r\n                  verifyCallback={this.verifyCallback}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <Button\r\n            variant=\"warning\"\r\n            onClick={() => this.setState({ modalShow: true })}>\r\n            Preview\r\n          </Button>\r\n\r\n          <PreviewForm\r\n            response={this.state.response}\r\n            captcha = {this.state.captcha}\r\n            show={this.state.modalShow}\r\n            onHide={() => this.setState({ modalShow: false })}\r\n          />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormComponent;\r\n","import React, { Component } from 'react'\r\nimport FormComponent from './FormComponent'\r\nimport \"../../css/registerpage.css\"\r\n\r\nclass RegisterPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FormComponent />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","import React, { Component } from 'react'\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport LandingPage from \"./LandingPage\";\r\nimport RegnContent from \"./DashBoard/RegnContent\";\r\nimport RegnDetails from \"./DashBoard/RegnDetails\";\r\nimport Stats from \"./DashBoard/Stats.js\";\r\nimport Register from \"./Registration/RegisterPage\";\r\n\r\nclass mainComponent extends Component {\r\n    render() {\r\n        return (\r\n          <Router>\r\n            <Route exact path=\"/\">\r\n              <div>\r\n                <LandingPage />\r\n              </div>\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n              <div>\r\n                <Register />\r\n              </div>\r\n            </Route>\r\n            <Route exact path=\"/admin\">\r\n              <div>\r\n                <RegnContent />\r\n              </div>\r\n            </Route>\r\n            <Route exact path=\"/admin/regn/:id\" component={RegnDetails} />\r\n            <Route exact path=\"/admin/stats\" component={Stats} />\r\n          </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default mainComponent\r\n","import React from 'react';\nimport Main from \"./components/mainComponent.js\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter >\n\n        <Main />\n      \n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}